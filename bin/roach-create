#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander'),
		path = require('path'),
		fs = require('fs'),
		join = path.join,
		read = fs.readFileSync,
		readdir = fs.readdirSync,
		exists = fs.existsSync,
		mkdir = require('mkdirp').sync,
		multiline = require('multiline');

//log fatal

function error(msg){
  var w = 10;
  var type = 'error';
  var len = Math.max(0, w - type.length);
  var pad = Array(len + 1).join(' ');
  console.error('  \033[31m%s\033[m : \033[90m%s\033[m', pad + type, msg);
}

function fatal(){
  console.error();
  error.apply(null, arguments);
  console.error();
  process.exit(1);
}

function log(type, msg, color){
  color = color || '36';
  var w = 10;
  var len = Math.max(0, w - type.length);
  var pad = Array(len + 1).join(' ');
  console.log('  \033[' + color + 'm%s\033[m : \033[90m%s\033[m', pad + type, msg);
}

function warn(type, msg){
  log(type, msg, '33');
}

// usage

program.usage('[dir]');

// options

program
  .option('-s, --schedule', 'create a scheduled bug')
  .parse(process.argv);

// config

var conf = {};

// dest

var dir = program.args[0] || '.';

// --local

var schedule = program.schedule;

// already a component

if(exists(dir)) {
  fatal(dir + ' directory already exists');
}

/**
 * Verbose write.
 */

function write(path, str) {
  if (exists(path)) {
    warn('exists', path);
  } else {
    log('create', path);
    fs.writeFileSync(path, str);
  }
}

var prompt = {
  name: 'job (name): ',
  desc: 'description: '
};

// prompt

program.prompt(prompt, function(obj){
	var name = obj.name;

  // populate json
  conf.name = name;
  conf.description = obj.desc;
  conf.version = "0.0.1";
  // dir
  console.log();
  log('create', dir);
  mkdir(dir);
  mkdir(dir + '/steps');
  // write index.js
  write(join(dir, 'index.js'), multiline(function(){/*
var roach = require('roach');

var bug = module.exports = roach.bug();
*/}));

  // write roach.json
  write(join(dir, 'roach.json'), JSON.stringify(conf, null, 2));

  console.log();
  process.exit();
});

