#!/usr/bin/env node

var program = require('commander'),
		path = require('path'),
		resolve = path.resolve,
		join = path.join,
		fs = require('fs'),
		exists = fs.existsSync;

/**
 * Usage.
 */

program
  .version(require('../package.json').version)
  .usage('<command> [options]');


/**
 * Examples.
 */

program.on('--help', function () {
  console.log('  Commands:');
  console.log();
  console.log('    create [dir]            create a roach bug');
  console.log();
});


/**
 * Parse.
 */

program.parse(process.argv);

// args void of cmd

var args = process.argv.slice(3);

// command

var cmd = program.args[0];

// executable

var bin = 'roach-' + cmd;

// local or resolve to absolute executable path

var local = join(__dirname, bin);

if (exists(local)) {
  bin = local;
} else {
  // bin = process.env.PATH.split(':').reduce(function(binary, p) {
  //   p = resolve(p, bin);
  //   return exists(p) && stat(p).isFile() ? p : binary;
  // }, bin);
}

// display help if bin does not exist

if (!exists(bin)) {
  console.error('\n  %s(1) does not exist', bin);
  program.help();
}
